#!/bin/sh

# The actually minimalistic and simple vim package manager

# Basic vim package manager that can do 4 things.
# 1. Download new packages
# 2. Update all packages
# 3. Move already downloaded packages between opt and start
# 4. Clean up packages no longer used

# Make sure this directory exists
BASEDIR=$HOME/.config/nvim/pack/packages

OPT="
https://github.com/alvan/vim-closetag
https://github.com/ervandew/supertab
https://github.com/morhetz/gruvbox
https://github.com/scrooloose/syntastic
https://github.com/sirtaj/vim-openscad
https://github.com/noahfrederick/vim-noctu
https://github.com/tpope/vim-surround
https://github.com/altercation/vim-colors-solarized
https://github.com/maxbane/vim-asm_ca65
https://github.com/junegunn/goyo.vim
"

START="
https://github.com/jiangmiao/auto-pairs
https://github.com/tpope/vim-commentary
https://github.com/tpope/vim-fugitive
https://github.com/wellle/context.vim
https://github.com/airblade/vim-gitgutter
https://github.com/ap/vim-css-color
https://github.com/timakro/vim-yadi
"

set -e

ask() {
	while :
	do
		printf "\033[1m%s [y/N]\033[0m " "$@"
		read -r ANSWER
		case "$ANSWER" in
		[yY]*) return 0 ;;
		[nN]*) return 1 ;;
		"") return 1 ;;
		*) ;;
		esac
	done
}

clean() {
	PACKS=$(printf "%s\n%s" "$OPT" "$START" | xargs -l1 basename)
	ORPHANS=$(find "$BASEDIR" -maxdepth 2 -mindepth 2 -printf '%P\n'| grep -v "$PACKS")
	[ -n "$ORPHANS" ] && echo "$ORPHANS" && ask "Remove these packs?" && rm -rv "$BASEDIR/$ORPHANS" && exit
	echo "Nothing to do"
}

manage() {
	for url in $OPT
	do
		BN=$(basename "$url")
		[ -d "$BASEDIR/opt/$BN" ] && continue
		[ -d "$BASEDIR/start/$BN" ] && mv -v "$BASEDIR/start/$BN" "$BASEDIR/opt/" && continue
		git clone "$url" "$BASEDIR/opt/$BN"
	done

	for url in $START
	do
		BN=$(basename "$url")
		[ -d "$BASEDIR/start/$BN" ] && continue
		[ -d "$BASEDIR/opt/$BN" ] && mv -v "$BASEDIR/opt/$BN" "$BASEDIR/start/" && continue
		git clone "$url" "$BASEDIR/start/$BN"
	done
	printf '\033[1mAll done!\033[0m\n'
}

update() {
	find "$BASEDIR" -maxdepth 3 -name '.git' -execdir sh -c 'printf "\033[1mUpdating %s: \033[0m" $(basename $(pwd))' \; -execdir git pull --ff-only \;
}

case "$1" in
-c|c*) clean ;;
-e|e*) "$EDITOR" "$0" ;;
-m|m*) manage ;;
-u|u*) update ;;
"") manage ;;
-h|*) printf -- "-c clean\n-e edit\n-m manage\n-u update\n" ;;
esac
